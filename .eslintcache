[{"/home/user/cv-project/cv-project/src/index.js":"1","/home/user/cv-project/cv-project/src/App.js":"2","/home/user/cv-project/cv-project/src/reportWebVitals.js":"3","/home/user/cv-project/cv-project/src/store/configureStore.js":"4","/home/user/cv-project/cv-project/src/components/Template1.jsx":"5","/home/user/cv-project/cv-project/src/main.js":"6","/home/user/cv-project/cv-project/src/1.js":"7","/home/user/cv-project/cv-project/src/reducers/rootReducer.js":"8","/home/user/cv-project/cv-project/src/templatePage.jsx":"9","/home/user/cv-project/cv-project/src/components/Template3.jsx":"10","/home/user/cv-project/cv-project/src/components/Template2.jsx":"11","/home/user/cv-project/cv-project/src/components/Template4.jsx":"12","/home/user/cv-project/cv-project/src/components/Template5.jsx":"13","/home/user/cv-project/cv-project/src/components/inputs/Drag.jsx":"14","/home/user/cv-project/cv-project/src/components/inputs/aboutMe.js":"15","/home/user/cv-project/cv-project/src/components/inputs/aboutWorkHistory.js":"16","/home/user/cv-project/cv-project/src/components/inputs/aboutHardSkills.js":"17","/home/user/cv-project/cv-project/src/components/inputs/portfolio.js":"18","/home/user/cv-project/cv-project/src/reducers/aboutHardSkillsReducer.js":"19","/home/user/cv-project/cv-project/src/reducers/templateReducer.js":"20","/home/user/cv-project/cv-project/src/reducers/portfolioReducer.js":"21","/home/user/cv-project/cv-project/src/reducers/customizedTemplateReducer.js":"22","/home/user/cv-project/cv-project/src/reducers/addTechnologyReducer.js":"23","/home/user/cv-project/cv-project/src/reducers/aboutWorkHistoryReducer.js":"24","/home/user/cv-project/cv-project/src/reducers/aboutMeReducer.js":"25","/home/user/cv-project/cv-project/src/actions/templateActions.js":"26","/home/user/cv-project/cv-project/src/actions/customizedTemplateActions.js":"27","/home/user/cv-project/cv-project/src/components/inputs/DragHeader.jsx":"28","/home/user/cv-project/cv-project/src/components/inputs/DragBody.jsx":"29","/home/user/cv-project/cv-project/src/components/inputs/DragPortfolio.jsx":"30","/home/user/cv-project/cv-project/src/components/inputs/TextDecorateButtons.jsx":"31","/home/user/cv-project/cv-project/src/constants/dbsStack.js":"32","/home/user/cv-project/cv-project/src/constants/stack.js":"33","/home/user/cv-project/cv-project/src/actions/addTechnologyActions.js":"34","/home/user/cv-project/cv-project/src/actions/portfolioActions.js":"35","/home/user/cv-project/cv-project/src/constants/backendStack.js":"36","/home/user/cv-project/cv-project/src/constants/frontendStack.js":"37","/home/user/cv-project/cv-project/src/actions/aboutHardSkillsActions.js":"38","/home/user/cv-project/cv-project/src/actions/aboutWorkActions.js":"39","/home/user/cv-project/cv-project/src/constants/actionTypes.js":"40","/home/user/cv-project/cv-project/src/actions/aboutMeActions.js":"41","/home/user/cv-project/cv-project/src/components/inputs/DragItem.jsx":"42"},{"size":632,"mtime":1606916976188,"results":"43","hashOfConfig":"44"},{"size":2143,"mtime":1608191053317,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1606896370287,"results":"46","hashOfConfig":"44"},{"size":174,"mtime":1606985173465,"results":"47","hashOfConfig":"44"},{"size":10091,"mtime":1608198061609,"results":"48","hashOfConfig":"44"},{"size":6805,"mtime":1608110427850,"results":"49","hashOfConfig":"44"},{"size":883,"mtime":1608043804274,"results":"50","hashOfConfig":"44"},{"size":651,"mtime":1608108284491,"results":"51","hashOfConfig":"44"},{"size":6853,"mtime":1608043804302,"results":"52","hashOfConfig":"44"},{"size":11973,"mtime":1608198061609,"results":"53","hashOfConfig":"44"},{"size":10873,"mtime":1608198061609,"results":"54","hashOfConfig":"44"},{"size":8143,"mtime":1608198061609,"results":"55","hashOfConfig":"44"},{"size":11545,"mtime":1608198061613,"results":"56","hashOfConfig":"44"},{"size":13217,"mtime":1608302220258,"results":"57","hashOfConfig":"44"},{"size":6862,"mtime":1607939664584,"results":"58","hashOfConfig":"44"},{"size":4924,"mtime":1607937560120,"results":"59","hashOfConfig":"44"},{"size":9288,"mtime":1608108284483,"results":"60","hashOfConfig":"44"},{"size":23074,"mtime":1608283675187,"results":"61","hashOfConfig":"44"},{"size":1212,"mtime":1608107025969,"results":"62","hashOfConfig":"44"},{"size":364,"mtime":1607327301089,"results":"63","hashOfConfig":"44"},{"size":9153,"mtime":1608211445161,"results":"64","hashOfConfig":"44"},{"size":4623,"mtime":1608214009029,"results":"65","hashOfConfig":"44"},{"size":1351,"mtime":1608108284495,"results":"66","hashOfConfig":"44"},{"size":1612,"mtime":1608107154650,"results":"67","hashOfConfig":"44"},{"size":2509,"mtime":1608107128579,"results":"68","hashOfConfig":"44"},{"size":235,"mtime":1607327301089,"results":"69","hashOfConfig":"44"},{"size":1987,"mtime":1608211445113,"results":"70","hashOfConfig":"44"},{"size":2066,"mtime":1608302336660,"results":"71","hashOfConfig":"44"},{"size":7008,"mtime":1608302816374,"results":"72","hashOfConfig":"44"},{"size":3238,"mtime":1608302338463,"results":"73","hashOfConfig":"44"},{"size":8776,"mtime":1608295688690,"results":"74","hashOfConfig":"44"},{"size":543,"mtime":1607933272983,"results":"75","hashOfConfig":"44"},{"size":11832,"mtime":1607691781949,"results":"76","hashOfConfig":"44"},{"size":1498,"mtime":1607697715252,"results":"77","hashOfConfig":"44"},{"size":4154,"mtime":1607415759947,"results":"78","hashOfConfig":"44"},{"size":481,"mtime":1607933272983,"results":"79","hashOfConfig":"44"},{"size":1238,"mtime":1607933272983,"results":"80","hashOfConfig":"44"},{"size":553,"mtime":1607426540196,"results":"81","hashOfConfig":"44"},{"size":964,"mtime":1606985173453,"results":"82","hashOfConfig":"44"},{"size":3790,"mtime":1608211445137,"results":"83","hashOfConfig":"44"},{"size":1743,"mtime":1607609935000,"results":"84","hashOfConfig":"44"},{"size":1995,"mtime":1608197331693,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"16k4yit",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},"/home/user/cv-project/cv-project/src/index.js",[],["175","176"],"/home/user/cv-project/cv-project/src/App.js",[],"/home/user/cv-project/cv-project/src/reportWebVitals.js",[],"/home/user/cv-project/cv-project/src/store/configureStore.js",[],"/home/user/cv-project/cv-project/src/components/Template1.jsx",[],"/home/user/cv-project/cv-project/src/main.js",[],"/home/user/cv-project/cv-project/src/1.js",[],"/home/user/cv-project/cv-project/src/reducers/rootReducer.js",[],"/home/user/cv-project/cv-project/src/templatePage.jsx",["177"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport allTemplateActions from \"./actions/templateActions\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Slide from \"@material-ui/core/Slide\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport MuiAlert from '@material-ui/lab/Alert';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(5),\n    textAlign: \"center\",\n  },\n}));\n\nexport default function CenteredGrid() {\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const { templateNumber } = useSelector((state) => state.templateReducer);\n\n  console.log(templateNumber, \"num\");\n  return (\n    <div className=\"page\">\n      <div className=\"container-pdf\">\n        <h2 className=\"h2-template\">Choose a template</h2>\n        <div className={classes.root}>\n          <Grid container spacing={1}>\n            <Grid item xs={3} className=\"template-1\">\n              <div className=\"cont-temp\">\n              <img className=\"img-1-1\" src=\"./template-1-1.png\" alt=\"\" />\n              <img\n                id=\"1\"\n                onClick={(e) => {\n                  \n                  handleClick(Alert)\n                  dispatch(allTemplateActions.setTemplateAction(e.target.id));\n                }}\n                className=\"img-1-2\"\n                src=\"./template-1-2.png\"\n                alt=\"\"\n              />\n             \n\n              \n             <div className=\"cont-item\">\n              \n              <h3 className=\"h3-template\">Template 1</h3>\n              {templateNumber==='1'?<CheckCircleOutlineIcon className=\"icon\"/>:null}\n              </div>\n              </div>\n            </Grid>\n            <Grid item xs={3} className=\"template-1\">\n              <div className=\"cont-temp\">\n              <img className=\"img-1-1\" src=\"./template-2-1.png\" alt=\"\" />\n              <img\n                id=\"2\"\n                onClick={(e) => {\n                  \n                  handleClick(Alert)\n                  dispatch(allTemplateActions.setTemplateAction(e.target.id));\n                }}\n                className=\"img-1-2\"\n                src=\"./template-2-2.png\"\n                alt=\"\"\n              />\n             \n\n              \n             <div className=\"cont-item\">\n              \n              <h3 className=\"h3-template\">Template 2</h3>\n              {templateNumber==='2'?<CheckCircleOutlineIcon className=\"icon\"/>:null}\n              </div>\n              </div>\n            </Grid>\n            <Grid item xs={3} className=\"template-1\">\n              <div className=\"cont-temp\">\n              <img className=\"img-1-1\" src=\"./template-3-1.png\" alt=\"\" />\n              <img\n                id=\"3\"\n                onClick={(e) => {\n                  \n                  handleClick(Alert)\n                  dispatch(allTemplateActions.setTemplateAction(e.target.id));\n                }}\n                className=\"img-1-2\"\n                src=\"./template-3-2.png\"\n                alt=\"\"\n              />\n             \n\n              \n             <div className=\"cont-item\">\n              \n              <h3 className=\"h3-template\">Template 3</h3>\n              {templateNumber==='3'?<CheckCircleOutlineIcon className=\"icon\"/>:null}\n              </div>\n              </div>\n            </Grid>\n            <Grid item xs={3} className=\"template-1\">\n              <div className=\"cont-temp\">\n              <img className=\"img-1-1\" src=\"./template-4-1.png\" alt=\"\" />\n              <img\n                id=\"4\"\n                onClick={(e) => {\n                  \n                  handleClick(Alert)\n                  dispatch(allTemplateActions.setTemplateAction(e.target.id));\n                }}\n                className=\"img-1-2\"\n                src=\"./template-4-2.png\"\n                alt=\"\"\n              />\n             \n\n              \n             <div className=\"cont-item\">\n              \n              <h3 className=\"h3-template\">Template 4</h3>\n              {templateNumber==='4'?<CheckCircleOutlineIcon className=\"icon\"/>:null}\n              </div>\n              </div>\n            </Grid>\n            <Grid item xs={3} className=\"template-1\">\n              <div className=\"cont-temp\">\n              <img className=\"img-1-1\" src=\"./template-5-1.png\" alt=\"\" />\n              <img\n                id=\"5\"\n                onClick={(e) => {\n                  \n                  handleClick(Alert)\n                  dispatch(allTemplateActions.setTemplateAction(e.target.id));\n                }}\n                className=\"img-1-2\"\n                src=\"./template-5-2.png\"\n                alt=\"\"\n              />\n             \n\n              \n             <div className=\"cont-item\">\n              \n              <h3 className=\"h3-template\">Template 5</h3>\n              {templateNumber==='5'?<CheckCircleOutlineIcon className=\"icon\"/>:null}\n              </div>\n              </div>\n            </Grid>\n            <Grid item xs={3} className=\"template-1\">\n              <div className=\"cont-temp\">\n              <img className=\"img-1-1\" src=\"./create.png\" alt=\"\" />\n              <img\n                id=\"6\"\n                onClick={(e) => {\n                  \n                  handleClick(Alert)\n                  dispatch(allTemplateActions.setTemplateAction(e.target.id));\n                }}\n                className=\"img-1-2\"\n                src=\"./create.png\"\n                alt=\"\"\n              />\n             \n\n              \n             <div className=\"cont-item\">\n              \n              <h3 className=\"h3-template\">Create template</h3>\n              {templateNumber==='6'?<CheckCircleOutlineIcon className=\"icon\"/>:null}\n              </div>\n              </div>\n            </Grid>\n            \n          </Grid>\n        </div>\n       \n        {templateNumber===\"\"?<h3 className=\"h3-template\">\nplease select a template</h3>:<Button\n          to=\"/steps\"\n          component={Link}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Далее\n        </Button>}\n      </div>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n          This is a success message!\n        </Alert>\n      </Snackbar>\n      \n    </div>\n  );\n}\n","/home/user/cv-project/cv-project/src/components/Template3.jsx",[],"/home/user/cv-project/cv-project/src/components/Template2.jsx",[],"/home/user/cv-project/cv-project/src/components/Template4.jsx",[],"/home/user/cv-project/cv-project/src/components/Template5.jsx",[],"/home/user/cv-project/cv-project/src/components/inputs/Drag.jsx",["178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194"],"/home/user/cv-project/cv-project/src/components/inputs/aboutMe.js",[],"/home/user/cv-project/cv-project/src/components/inputs/aboutWorkHistory.js",[],"/home/user/cv-project/cv-project/src/components/inputs/aboutHardSkills.js",[],"/home/user/cv-project/cv-project/src/components/inputs/portfolio.js",["195"],"import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport allPortfolioActions from '../../actions/portfolioActions';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport allTechnologyActions from \"../../actions/addTechnologyActions\";\nimport top100Films from '../../constants/stack';\n\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n\n\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\n\nconst Portfolio = () => {\n  const dispatch = useDispatch()\n\n  const { firstProject, secondProject, thirdProject, fourthProject, fifthProject, sixthProject } = useSelector(state => state.portfolioReducer)\n\n  const classes = useStyles();\n  const classes2 = useStyles2();\n\n\n  const {techList} = useSelector(state => state.addTechnologyReducer)\n  let uniqueArray = top100Films.concat(techList).concat()\n\n  let firstSummaryCounter = (220 - firstProject.summary.length) + ' letters left.'\n  let firstWhatYouDoCounter = (180 - firstProject.whatYouDo.length) + ' letters left.'\n  let secondSummaryCounter = (220 - secondProject.summary.length) + ' letters left.'\n  let secondWhatYouDoCounter = (180 - secondProject.whatYouDo.length) + ' letters left.'\n  let thirdSummaryCounter = (220 - thirdProject.summary.length) + ' letters left.'\n  let thirdWhatYouDoCounter = (180 - thirdProject.whatYouDo.length) + ' letters left.'\n  let fourthSummaryCounter = (220 - fourthProject.summary.length) + ' letters left.'\n  let fourthWhatYouDoCounter = (180 - fourthProject.whatYouDo.length) + ' letters left.'\n  let fifthSummaryCounter = (220 - fifthProject.summary.length) + ' letters left.'\n  let fifthWhatYouDoCounter = (180 - fifthProject.whatYouDo.length) + ' letters left.'\n  let sixthSummaryCounter = (220 - sixthProject.summary.length) + ' letters left.'\n  let sixthWhatYouDoCounter = (180 - sixthProject.whatYouDo.length) + ' letters left.'\n\n  let showSecond = (!(firstProject.name && firstProject.link && firstProject.summary && firstProject.whatYouDo && firstProject.stack.length>0) && !(secondProject.name || secondProject.link || secondProject.summary || secondProject.whatYouDo || secondProject.stack.length>0))\n  let showThird = (!(secondProject.name && secondProject.link && secondProject.summary && secondProject.whatYouDo && secondProject.stack.length>0) && !(thirdProject.name || thirdProject.link || thirdProject.summary || thirdProject.whatYouDo || thirdProject.stack.length>0))\n  let showFourth = (!(thirdProject.name && thirdProject.link && thirdProject.summary && thirdProject.whatYouDo && thirdProject.stack.length>0) && !(fourthProject.name || fourthProject.link || fourthProject.summary || fourthProject.whatYouDo || fourthProject.stack.length>0))\n  let showFifth = (!(fourthProject.name && fourthProject.link && fourthProject.summary && fourthProject.whatYouDo && fourthProject.stack.length>0) && !(fifthProject.name || fifthProject.link || fifthProject.summary || fifthProject.whatYouDo || fifthProject.stack.length>0))\n  let showSixth = (!(fifthProject.name && fifthProject.link && fifthProject.summary && fifthProject.whatYouDo && fifthProject.stack.length>0) && !(sixthProject.name || sixthProject.link || sixthProject.summary || sixthProject.whatYouDo || sixthProject.stack.length>0))\n\n  return (\n    <div className='container'>\n      <div className={classes2.root}>\n        <h2 className='t-1'>Tell about your best projects.</h2>\n\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <div >\n              <h3>First project.</h3>\n            </div>\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField value={firstProject.name} onChange={e => dispatch(allPortfolioActions.setFirstProjectName(e.target.value))} label=\"Project name\" variant=\"outlined\" />\n                <TextField value={firstProject.link} onChange={e => dispatch(allPortfolioActions.setFirstProjectLink(e.target.value))} label='Link to this project' variant='outlined' />\n                <TextField\n                  value={firstProject.summary}\n                  onChange={e => dispatch(allPortfolioActions.setFirstProjectSummary(e.target.value.length <= 220 ? e.target.value : firstProject.summary))}\n                  helperText={firstProject.summary.length > 0 ? firstSummaryCounter : ''}\n                  label='Summary'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" />\n                <TextField value={firstProject.whatYouDo}\n                  onChange={e => dispatch(allPortfolioActions.setFirstProjectWhatYouDo(e.target.value.length <= 180 ? e.target.value : firstProject.whatYouDo))}\n                  helperText={firstProject.whatYouDo.length > 0 ? firstWhatYouDoCounter : ''}\n                  label='What you did here?'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" />\n                {/* <TextField value={firstProject.stack}\n                  onChange={e => dispatch(allPortfolioActions.setFirstProjectStack(e.target.value))}\n                  label='Stack'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" /> */}\n              </form>\n              <h3>Stack:</h3>\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <div style={{ width: 500 }}>\n                  <Autocomplete\n                    multiple\n                    options={uniqueArray}\n                    getOptionLabel={option => option.title}\n                    onChange={(_, values) => dispatch(allPortfolioActions.setFirstProjectStack(values))}\n                    value={firstProject.stack}\n\n                    renderInput={params => (\n                      <TextField\n\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Search\"\n                        margin=\"normal\"\n                        fullWidth\n                      />\n                    )}\n                  />\n                </div>\n                </form>\n              <h4>\n                All fields are required.</h4>\n            </div>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion hidden={showSecond}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n          >\n            <div className={classes2.heading} ><h3>Second project</h3></div>\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField value={secondProject.name} onChange={e => dispatch(allPortfolioActions.setSecondProjectName(e.target.value))} label=\"Project name\" variant=\"outlined\" />\n                <TextField value={secondProject.link} onChange={e => dispatch(allPortfolioActions.setSecondProjectLink(e.target.value))} label='Link to this project' variant='outlined' />\n                <TextField\n                  value={secondProject.summary}\n                  onChange={e => dispatch(allPortfolioActions.setSecondProjectSummary(e.target.value.length <= 220 ? e.target.value : secondProject.summary))}\n                  helperText={secondProject.summary.length > 0 ? secondSummaryCounter : ''}\n                  label='Summary'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" />\n                <TextField\n                  value={secondProject.whatYouDo}\n                  onChange={e => dispatch(allPortfolioActions.setSecondProjectWhatYouDo(e.target.value.length <= 180 ? e.target.value : secondProject.whatYouDo))}\n                  helperText={secondProject.whatYouDo.length > 0 ? secondWhatYouDoCounter : ''}\n                  label='What you did here?'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" />\n                {/* <TextField\n                  value={secondProject.stack}\n                  onChange={e => dispatch(allPortfolioActions.setSecondProjectStack(e.target.value))}\n                  label='Stack'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" /> */}\n              </form>\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <div style={{ width: 500 }}>\n                  <Autocomplete\n                    multiple\n                    options={uniqueArray}\n                    getOptionLabel={option => option.title}\n                    onChange={(_, values) => dispatch(allPortfolioActions.setSecondProjectStack(values))}\n                    value={secondProject.stack}\n\n                    renderInput={params => (\n                      <TextField\n\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Search\"\n                        margin=\"normal\"\n                        fullWidth\n                      />\n                    )}\n                  />\n                </div>\n                </form>\n              <p>\n                All fields are required.</p>\n            </div>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion hidden={showThird}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n          >\n            <div className={classes2.heading}><h3>Third project</h3></div>\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField value={thirdProject.name} onChange={e => dispatch(allPortfolioActions.setThirdProjectName(e.target.value))} label=\"Project name\" variant=\"outlined\" />\n                <TextField value={thirdProject.link} onChange={e => dispatch(allPortfolioActions.setThirdProjectLink(e.target.value))} label='Link to this project' variant='outlined' />\n                <TextField\n                  value={thirdProject.summary}\n                  onChange={e => dispatch(allPortfolioActions.setThirdProjectSummary(e.target.value.length <= 220 ? e.target.value : thirdProject.summary))}\n                  helperText={thirdProject.summary.length > 0 ? thirdSummaryCounter : ''}\n                  label='Summary'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" />\n                <TextField\n                  value={thirdProject.whatYouDo}\n                  onChange={e => dispatch(allPortfolioActions.setThirdProjectWhatYouDo(e.target.value.length <= 180 ? e.target.value : thirdProject.whatYouDo))}\n                  helperText={thirdProject.whatYouDo.length > 0 ? thirdWhatYouDoCounter : ''}\n                  label='What you did here?'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" />\n                {/* <TextField\n                  value={thirdProject.stack}\n                  onChange={e => dispatch(allPortfolioActions.setThirdProjectStack(e.target.value))}\n                  label='Stack'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" /> */}\n              </form>\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <div style={{ width: 500 }}>\n                  <Autocomplete\n                    multiple\n                    options={uniqueArray}\n                    getOptionLabel={option => option.title}\n                    onChange={(_, values) => dispatch(allPortfolioActions.setThirdProjectStack(values))}\n                    value={thirdProject.stack}\n\n                    renderInput={params => (\n                      <TextField\n\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Search\"\n                        margin=\"normal\"\n                        fullWidth\n                      />\n                    )}\n                  />\n                </div>\n                </form>\n              <p>\n                All fields are required.</p>\n            </div>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion hidden={showFourth}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n          >\n            <div className={classes2.heading}><h3>Fourth project</h3></div>\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField value={fourthProject.name} onChange={e => dispatch(allPortfolioActions.setFourthProjectName(e.target.value))} label=\"Project name\" variant=\"outlined\" />\n                <TextField value={fourthProject.link} onChange={e => dispatch(allPortfolioActions.setFourthProjectLink(e.target.value))} label='Link to this project' variant='outlined' />\n                <TextField\n                  value={fourthProject.summary}\n                  onChange={e => dispatch(allPortfolioActions.setFourthProjectSummary(e.target.value.length <= 220 ? e.target.value : fourthProject.summary))}\n\n                  helperText={fourthProject.summary.length > 0 ? fourthSummaryCounter : ''}\n                  label='Summary'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" />\n                <TextField\n                  value={fourthProject.whatYouDo}\n                  onChange={e => dispatch(allPortfolioActions.setFourthProjectWhatYouDo(e.target.value.length <= 180 ? e.target.value : fourthProject.whatYouDo))}\n                  helperText={fourthProject.whatYouDo.length > 0 ? fourthWhatYouDoCounter : ''}\n                  label='What you did here?'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" />\n                {/* <TextField\n                  value={fourthProject.stack}\n                  onChange={e => dispatch(allPortfolioActions.setFourthProjectStack(e.target.value))}\n                  label='Stack'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" /> */}\n              </form>\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <div style={{ width: 500 }}>\n                  <Autocomplete\n                    multiple\n                    options={uniqueArray}\n                    getOptionLabel={option => option.title}\n                    onChange={(_, values) => dispatch(allPortfolioActions.setFourthProjectStack(values))}\n                    value={fourthProject.stack}\n\n                    renderInput={params => (\n                      <TextField\n\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Search\"\n                        margin=\"normal\"\n                        fullWidth\n                      />\n                    )}\n                  />\n                </div>\n                </form>\n              <p>\n                All fields are required.</p>\n            </div>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion hidden={showFifth}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n          >\n            <div className={classes2.heading}><h3>Fifth project</h3></div>\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField value={fifthProject.name} onChange={e => dispatch(allPortfolioActions.setFifthProjectName(e.target.value))} label=\"Project name\" variant=\"outlined\" />\n                <TextField value={fifthProject.link} onChange={e => dispatch(allPortfolioActions.setFifthProjectLink(e.target.value))} label='Link to this project' variant='outlined' />\n                <TextField\n                  value={fifthProject.summary}\n                  onChange={e => dispatch(allPortfolioActions.setFifthProjectSummary(e.target.value.length <= 220 ? e.target.value : fifthProject.summary))}\n\n                  helperText={fifthProject.summary.length > 0 ? fifthSummaryCounter : ''}\n                  label='Summary'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" />\n                <TextField\n                  value={fifthProject.whatYouDo}\n                  onChange={e => dispatch(allPortfolioActions.setFifthProjectWhatYouDo(e.target.value.length <= 180 ? e.target.value : fifthProject.whatYouDo))}\n                  helperText={fifthProject.whatYouDo.length > 0 ? fifthWhatYouDoCounter : ''}\n                  label='What you did here?'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" />\n                {/* <TextField\n                  value={fifthProject.stack}\n                  onChange={e => dispatch(allPortfolioActions.setFifthProjectStack(e.target.value))}\n                  label='Stack'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" /> */}\n              </form>\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <div style={{ width: 500 }}>\n                  <Autocomplete\n                    multiple\n                    options={uniqueArray}\n                    getOptionLabel={option => option.title}\n                    onChange={(_, values) => dispatch(allPortfolioActions.setFifthProjectStack(values))}\n                    value={fifthProject.stack}\n\n                    renderInput={params => (\n                      <TextField\n\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Search\"\n                        margin=\"normal\"\n                        fullWidth\n                      />\n                    )}\n                  />\n                </div>\n                </form>\n              <p>\n                All fields are required.</p>\n            </div>\n          </AccordionDetails>\n        </Accordion>\n        <Accordion hidden={showSixth}>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n          >\n            <div className={classes2.heading}><h3>Sixth project</h3></div>\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField value={sixthProject.name} onChange={e => dispatch(allPortfolioActions.setSixthProjectName(e.target.value))} label=\"Project name\" variant=\"outlined\" />\n                <TextField value={sixthProject.link} onChange={e => dispatch(allPortfolioActions.setSixthProjectLink(e.target.value))} label='Link to this project' variant='outlined' />\n                <TextField\n                  value={sixthProject.summary}\n                  onChange={e => dispatch(allPortfolioActions.setSixthProjectSummary(e.target.value.length <= 220 ? e.target.value : sixthProject.summary))}\n\n                  helperText={sixthProject.summary.length > 0 ? sixthSummaryCounter : ''}\n                  label='Summary'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" />\n                <TextField\n                  value={sixthProject.whatYouDo}\n                  onChange={e => dispatch(allPortfolioActions.setSixthProjectWhatYouDo(e.target.value.length <= 180 ? e.target.value : sixthProject.whatYouDo))}\n                  helperText={sixthProject.whatYouDo.length > 0 ? sixthWhatYouDoCounter : ''}\n                  label='What you did here?'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" />\n                {/* <TextField\n                  value={sixthProject.stack}\n                  onChange={e => dispatch(allPortfolioActions.setSixthProjectStack(e.target.value))}\n                  label='Stack'\n                  variant='outlined'\n                  multiline\n                  rowsMax={10}\n                  id=\"outlined-multiline-flexible\" /> */}\n              </form>\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <div style={{ width: 500 }}>\n                  <Autocomplete\n                    multiple\n                    options={uniqueArray}\n                    getOptionLabel={option => option.title}\n                    onChange={(_, values) => dispatch(allPortfolioActions.setSixthProjectStack(values))}\n                    value={sixthProject.stack}\n\n                    renderInput={params => (\n                      <TextField\n\n                        {...params}\n                        variant=\"standard\"\n                        placeholder=\"Search\"\n                        margin=\"normal\"\n                        fullWidth\n                      />\n                    )}\n                  />\n                </div>\n                </form>\n              <p>\n                All fields are required.</p>\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      </div>\n\n\n\n\n    </div>\n  )\n}\n\nexport default Portfolio\n\n\n","/home/user/cv-project/cv-project/src/reducers/aboutHardSkillsReducer.js",[],"/home/user/cv-project/cv-project/src/reducers/templateReducer.js",[],"/home/user/cv-project/cv-project/src/reducers/portfolioReducer.js",[],"/home/user/cv-project/cv-project/src/reducers/customizedTemplateReducer.js",["196","197"],"const initialState = {\n    headerBackground: '#fff',\n    bodyBackground: '#fff',\n    textAlign: 'left',\n    posVertical: 'flex-start',\n    activeBlock: 1,\n    avaBorderRadius: '0',\n    headerImage: null,\n    headerImagePosition: 'cover',\n    headerImageValue: '',\n    bodyBackground: '#fff',\n    bodyImage: null,\n    bodyImagePosition: 'cover',\n    bodyImageValue: '',\n    activeTextType: 'nameSize',\n    nameSize: 40,\n    posSize: 24,\n    titleSize: 21,\n    subTitleSize: 19,\n    textSize: 15,\n    smallTextSize: 12,\n\n    nameColor: '#333',\n    posColor: '#333',\n    titleColor: '#333',\n    subTitleColor: '#aa1060',\n    textColor: '#aa1060',\n    smallTextColor: '#aa1060',\n}\n\nconst customizedTemplateReducer = (state=initialState, actions) => {\n    switch(actions.type){\n        case 'SET_HEADER_BACKGROUND':\n            return{\n                ...state,\n                headerBackground: actions.payload,\n                headerImage: '',\n                headerImageValue: ''\n            }\n\n        case 'SET_VERTICAL_POS':\n            return{\n                ...state,\n                posVertical: actions.payload\n            }\n\n        case 'SET_TEXT_ALIGN':\n            return{\n                ...state,\n                textAlign: actions.payload\n            }\n\n        case 'SET_BORDER_RADIUS_AVATAR':\n            return{\n                ...state,\n                avaBorderRadius: actions.payload\n            }\n\n        case 'SET_ACTIVE_BLOCK':\n            return{\n                ...state,\n                activeBlock: actions.payload\n            }\n\n        case 'SET_BODY_BACKGROUND':\n            return{\n                ...state,\n                bodyBackground: actions.payload,\n                bodyImage: '',\n                bodyImageValue: ''\n            }\n            \n        case 'SET_HEADER_IMAGE':\n            return{\n                ...state,\n                headerImage: actions.payload.url,\n                headerBackground: '',\n                headerImageValue: actions.payload.value\n            }\n        case 'SET_HEADER_IMAGE_POSITION':\n                return{\n                    ...state,\n                    headerImagePosition: actions.payload,\n                    \n                }\n        case 'SET_BODY_BACKGROUND':\n            return{\n                ...state,\n                bodyBackground: actions.payload,\n                bodyImage: '',\n                bodyImageValue: ''\n            }\n        case 'SET_BODY_IMAGE_POSITION':\n                return{\n                    ...state,\n                    bodyImagePosition: actions.payload\n                }\n        case 'SET_BODY_IMAGE':\n            return{\n                ...state,\n                bodyImage: actions.payload.url,\n                bodyBackground: '',\n                bodyImageValue: actions.payload.value\n            }\n\n        case 'SET_ACTIVE_TEXT_TYPE':\n                return{\n                    ...state,\n                    activeTextType: actions.payload\n                }\n\n        case 'SET_ACTIVE_TEXT_SIZE':\n            return{\n                ...state,\n                nameSize: actions.payload.name === 'nameSize' ? actions.payload.value : state.nameSize,\n                posSize: actions.payload.name === 'posSize' ? actions.payload.value : state.posSize,\n                titleSize: actions.payload.name === 'titleSize' ? actions.payload.value : state.titleSize,\n                subTitleSize: actions.payload.name === 'subTitleSize' ? actions.payload.value : state.subTitleSize,\n                textSize: actions.payload.name === 'textSize' ? actions.payload.value : state.textSize,\n                smallTextSize: actions.payload.name === 'smallTextSize' ? actions.payload.value : state.smallTextSize,\n            }\n\n        case 'SET_ACTIVE_TEXT_COLOR':\n         console.log(actions.payload)\n            return{\n                ...state,\n                nameColor: actions.payload.name === 'nameSize' ? actions.payload.value : state.nameColor,\n                posColor: actions.payload.name === 'posSize' ? actions.payload.value : state.posColor,\n                titleColor: actions.payload.name === 'titleSize' ? actions.payload.value : state.titleColor,\n                subTitleColor: actions.payload.name === 'subTitleSize' ? actions.payload.value : state.subTitleColor,\n                textColor: actions.payload.name === 'textSize' ? actions.payload.value : state.textColor,\n                smallTextColor: actions.payload.name === 'smallTextSize' ? actions.payload.value : state.smallTextColor,\n            }\n\n        default :\n            return state\n    }\n}\n\nexport default customizedTemplateReducer;","/home/user/cv-project/cv-project/src/reducers/addTechnologyReducer.js",[],"/home/user/cv-project/cv-project/src/reducers/aboutWorkHistoryReducer.js",[],"/home/user/cv-project/cv-project/src/reducers/aboutMeReducer.js",[],"/home/user/cv-project/cv-project/src/actions/templateActions.js",[],"/home/user/cv-project/cv-project/src/actions/customizedTemplateActions.js",[],"/home/user/cv-project/cv-project/src/components/inputs/DragHeader.jsx",[],"/home/user/cv-project/cv-project/src/components/inputs/DragBody.jsx",["198"],"/home/user/cv-project/cv-project/src/components/inputs/DragPortfolio.jsx",["199","200","201","202","203","204","205","206","207","208","209"],"/home/user/cv-project/cv-project/src/components/inputs/TextDecorateButtons.jsx",[],"/home/user/cv-project/cv-project/src/constants/dbsStack.js",[],"/home/user/cv-project/cv-project/src/constants/stack.js",[],"/home/user/cv-project/cv-project/src/actions/addTechnologyActions.js",[],"/home/user/cv-project/cv-project/src/actions/portfolioActions.js",[],"/home/user/cv-project/cv-project/src/constants/backendStack.js",[],"/home/user/cv-project/cv-project/src/constants/frontendStack.js",[],"/home/user/cv-project/cv-project/src/actions/aboutHardSkillsActions.js",[],"/home/user/cv-project/cv-project/src/actions/aboutWorkActions.js",[],"/home/user/cv-project/cv-project/src/constants/actionTypes.js",[],"/home/user/cv-project/cv-project/src/actions/aboutMeActions.js",[],"/home/user/cv-project/cv-project/src/components/inputs/DragItem.jsx",["210","211"],"import React, {useState, useEffect} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport allCustomizedTemplateActions from '../../actions/customizedTemplateActions';\n\n\nconst DragItem = ({id, renderContent, gsw = 1, gsh = 1}) => {\n    const {posVertical, textAlign, activeBlock} = useSelector(state=>state.customizedTemplateReducer);\n    const [newStyle, setNewStyle] = useState({\n        display: \"flex\",\n        textAlign: textAlign,\n        alignItems: posVertical,\n    });\n    const useStyles = makeStyles((theme) => ({\n        root: newStyle,\n    }));\n    const classes = useStyles();\n    const {setActiveBlockAction, setVerticalPosAction, setTextAlignAction} = allCustomizedTemplateActions;\n    const dispatch = useDispatch();\n\n    const updateStyleVer = () => {\n        if(id === activeBlock){\n            setNewStyle({\n                ...newStyle,\n                alignItems: posVertical,\n            })\n        }\n    }\n    \n    const updateStyleText = () => {\n        if(id === activeBlock){\n            setNewStyle({\n                ...newStyle,\n                textAlign: textAlign,\n            })\n        }\n    }\n\n    useEffect(() => {\n        updateStyleVer();\n    }, [posVertical]);\n\n    useEffect(() => {\n        updateStyleText();\n    }, [textAlign]);    \n\n    const handleClickItem = () => {\n            console.log(newStyle)\n            dispatch(setActiveBlockAction(id));\n            dispatch(setVerticalPosAction(newStyle.alignItems));\n            dispatch(setTextAlignAction(newStyle.textAlign));\n    }\n\n    return (\n        <div className=\"grid-stack-item\" gs-w={gsw} gs-h={gsh} onMouseDown={() => handleClickItem()}>\n            <div className={`${classes.root} ${activeBlock === id ? 'active-block' : '' } grid-stack-item-content`}\n                // style={{textAlign: textAlign, alignItems: posVertical}}\n            >{renderContent}</div>\n        </div>\n    );\n};\n\n\n\nexport default DragItem",{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":9,"column":8,"nodeType":"218","messageId":"219","endLine":9,"endColumn":13},{"ruleId":"216","severity":1,"message":"220","line":15,"column":10,"nodeType":"218","messageId":"219","endLine":15,"endColumn":19},{"ruleId":"216","severity":1,"message":"221","line":27,"column":8,"nodeType":"218","messageId":"219","endLine":27,"endColumn":17},{"ruleId":"216","severity":1,"message":"222","line":50,"column":7,"nodeType":"218","messageId":"219","endLine":50,"endColumn":24},{"ruleId":"216","severity":1,"message":"223","line":84,"column":5,"nodeType":"218","messageId":"219","endLine":84,"endColumn":17},{"ruleId":"216","severity":1,"message":"224","line":85,"column":5,"nodeType":"218","messageId":"219","endLine":85,"endColumn":18},{"ruleId":"216","severity":1,"message":"225","line":86,"column":5,"nodeType":"218","messageId":"219","endLine":86,"endColumn":21},{"ruleId":"216","severity":1,"message":"226","line":87,"column":5,"nodeType":"218","messageId":"219","endLine":87,"endColumn":18},{"ruleId":"216","severity":1,"message":"227","line":88,"column":5,"nodeType":"218","messageId":"219","endLine":88,"endColumn":19},{"ruleId":"216","severity":1,"message":"228","line":89,"column":5,"nodeType":"218","messageId":"219","endLine":89,"endColumn":22},{"ruleId":"216","severity":1,"message":"229","line":91,"column":11,"nodeType":"218","messageId":"219","endLine":91,"endColumn":19},{"ruleId":"216","severity":1,"message":"230","line":91,"column":21,"nodeType":"218","messageId":"219","endLine":91,"endColumn":28},{"ruleId":"216","severity":1,"message":"231","line":91,"column":30,"nodeType":"218","messageId":"219","endLine":91,"endColumn":33},{"ruleId":"216","severity":1,"message":"232","line":91,"column":35,"nodeType":"218","messageId":"219","endLine":91,"endColumn":40},{"ruleId":"216","severity":1,"message":"233","line":102,"column":9,"nodeType":"218","messageId":"219","endLine":102,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":118,"column":5,"nodeType":"236","messageId":"237","endLine":118,"endColumn":142},{"ruleId":"234","severity":1,"message":"235","line":123,"column":5,"nodeType":"236","messageId":"237","endLine":123,"endColumn":140},{"ruleId":"216","severity":1,"message":"238","line":141,"column":17,"nodeType":"218","messageId":"219","endLine":141,"endColumn":25},{"ruleId":"216","severity":1,"message":"239","line":11,"column":8,"nodeType":"218","messageId":"219","endLine":11,"endColumn":28},{"ruleId":"240","severity":1,"message":"241","line":11,"column":5,"nodeType":"242","messageId":"243","endLine":11,"endColumn":19},{"ruleId":"244","severity":1,"message":"245","line":86,"column":9,"nodeType":"246","messageId":"243","endLine":92,"endColumn":14},{"ruleId":"216","severity":1,"message":"233","line":34,"column":9,"nodeType":"218","messageId":"219","endLine":34,"endColumn":17},{"ruleId":"216","severity":1,"message":"223","line":16,"column":5,"nodeType":"218","messageId":"219","endLine":16,"endColumn":17},{"ruleId":"216","severity":1,"message":"224","line":17,"column":5,"nodeType":"218","messageId":"219","endLine":17,"endColumn":18},{"ruleId":"216","severity":1,"message":"225","line":18,"column":5,"nodeType":"218","messageId":"219","endLine":18,"endColumn":21},{"ruleId":"216","severity":1,"message":"226","line":19,"column":5,"nodeType":"218","messageId":"219","endLine":19,"endColumn":18},{"ruleId":"216","severity":1,"message":"227","line":20,"column":5,"nodeType":"218","messageId":"219","endLine":20,"endColumn":19},{"ruleId":"216","severity":1,"message":"228","line":21,"column":5,"nodeType":"218","messageId":"219","endLine":21,"endColumn":22},{"ruleId":"216","severity":1,"message":"229","line":23,"column":11,"nodeType":"218","messageId":"219","endLine":23,"endColumn":19},{"ruleId":"216","severity":1,"message":"230","line":23,"column":21,"nodeType":"218","messageId":"219","endLine":23,"endColumn":28},{"ruleId":"216","severity":1,"message":"231","line":23,"column":30,"nodeType":"218","messageId":"219","endLine":23,"endColumn":33},{"ruleId":"216","severity":1,"message":"232","line":23,"column":35,"nodeType":"218","messageId":"219","endLine":23,"endColumn":40},{"ruleId":"216","severity":1,"message":"247","line":42,"column":9,"nodeType":"218","messageId":"219","endLine":42,"endColumn":17},{"ruleId":"248","severity":1,"message":"249","line":41,"column":8,"nodeType":"250","endLine":41,"endColumn":21,"suggestions":"251"},{"ruleId":"248","severity":1,"message":"252","line":45,"column":8,"nodeType":"250","endLine":45,"endColumn":19,"suggestions":"253"},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"no-unused-vars","'Slide' is defined but never used.","Identifier","unusedVar","'GridStack' is defined but never used.","'TextField' is defined but never used.","'bodyImagePosition' is assigned a value but never used.","'firstCompany' is assigned a value but never used.","'firstPosition' is assigned a value but never used.","'firstDescription' is assigned a value but never used.","'secondCompany' is assigned a value but never used.","'secondPosition' is assigned a value but never used.","'secondDescription' is assigned a value but never used.","'frontend' is assigned a value but never used.","'backend' is assigned a value but never used.","'dbs' is assigned a value but never used.","'other' is assigned a value but never used.","'projects' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'setIsPDF' is assigned a value but never used.","'allTechnologyActions' is defined but never used.","no-dupe-keys","Duplicate key 'bodyBackground'.","ObjectExpression","unexpected","no-duplicate-case","Duplicate case label.","SwitchCase","'userInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateStyleVer'. Either include it or remove the dependency array.","ArrayExpression",["256"],"React Hook useEffect has a missing dependency: 'updateStyleText'. Either include it or remove the dependency array.",["257"],"no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},"Update the dependencies array to be: [posVertical, updateStyleVer]",{"range":"262","text":"263"},"Update the dependencies array to be: [textAlign, updateStyleText]",{"range":"264","text":"265"},[1259,1272],"[posVertical, updateStyleVer]",[1332,1343],"[textAlign, updateStyleText]"]