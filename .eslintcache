[{"/home/user/dev/cv-project/src/index.js":"1","/home/user/dev/cv-project/src/reportWebVitals.js":"2","/home/user/dev/cv-project/src/App.js":"3","/home/user/dev/cv-project/src/store/configureStore.js":"4","/home/user/dev/cv-project/src/components/Template1.jsx":"5","/home/user/dev/cv-project/src/1.js":"6","/home/user/dev/cv-project/src/reducers/rootReducer.js":"7","/home/user/dev/cv-project/src/templatePage.jsx":"8","/home/user/dev/cv-project/src/components/Template3.jsx":"9","/home/user/dev/cv-project/src/components/Template4.jsx":"10","/home/user/dev/cv-project/src/components/Template5.jsx":"11","/home/user/dev/cv-project/src/components/Template2.jsx":"12","/home/user/dev/cv-project/src/components/inputs/Drag.jsx":"13","/home/user/dev/cv-project/src/components/inputs/aboutHardSkills.js":"14","/home/user/dev/cv-project/src/reducers/templateReducer.js":"15","/home/user/dev/cv-project/src/reducers/portfolioReducer.js":"16","/home/user/dev/cv-project/src/reducers/customizedTemplateReducer.js":"17","/home/user/dev/cv-project/src/components/inputs/aboutWorkHistory.js":"18","/home/user/dev/cv-project/src/components/inputs/portfolio.js":"19","/home/user/dev/cv-project/src/components/inputs/aboutMe.js":"20","/home/user/dev/cv-project/src/reducers/addTechnologyReducer.js":"21","/home/user/dev/cv-project/src/reducers/aboutWorkHistoryReducer.js":"22","/home/user/dev/cv-project/src/reducers/aboutMeReducer.js":"23","/home/user/dev/cv-project/src/reducers/aboutHardSkillsReducer.js":"24","/home/user/dev/cv-project/src/actions/customizedTemplateActions.js":"25","/home/user/dev/cv-project/src/actions/templateActions.js":"26","/home/user/dev/cv-project/src/actions/addTechnologyActions.js":"27","/home/user/dev/cv-project/src/constants/dbsStack.js":"28","/home/user/dev/cv-project/src/constants/backendStack.js":"29","/home/user/dev/cv-project/src/constants/frontendStack.js":"30","/home/user/dev/cv-project/src/constants/stack.js":"31","/home/user/dev/cv-project/src/components/inputs/DragPortfolio.jsx":"32","/home/user/dev/cv-project/src/components/inputs/TextDecorateButtons.jsx":"33","/home/user/dev/cv-project/src/components/inputs/DragBody.jsx":"34","/home/user/dev/cv-project/src/components/inputs/DragHeader.jsx":"35","/home/user/dev/cv-project/src/actions/aboutMeActions.js":"36","/home/user/dev/cv-project/src/actions/portfolioActions.js":"37","/home/user/dev/cv-project/src/actions/aboutWorkActions.js":"38","/home/user/dev/cv-project/src/actions/aboutHardSkillsActions.js":"39","/home/user/dev/cv-project/src/constants/actionTypes.js":"40","/home/user/dev/cv-project/src/components/inputs/DragItem.jsx":"41","/home/user/dev/cv-project/src/components/inputs/Load.jsx":"42"},{"size":419,"mtime":1608541794967,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":1608016217444,"results":"45","hashOfConfig":"44"},{"size":2571,"mtime":1608721224325,"results":"46","hashOfConfig":"44"},{"size":713,"mtime":1608629706769,"results":"47","hashOfConfig":"44"},{"size":10587,"mtime":1608543349260,"results":"48","hashOfConfig":"44"},{"size":480,"mtime":1608541794959,"results":"49","hashOfConfig":"44"},{"size":651,"mtime":1608106867060,"results":"50","hashOfConfig":"44"},{"size":7989,"mtime":1608641376264,"results":"51","hashOfConfig":"44"},{"size":12881,"mtime":1608541794967,"results":"52","hashOfConfig":"44"},{"size":8963,"mtime":1608543349260,"results":"53","hashOfConfig":"44"},{"size":12462,"mtime":1608629496852,"results":"54","hashOfConfig":"44"},{"size":9585,"mtime":1608543349260,"results":"55","hashOfConfig":"44"},{"size":16482,"mtime":1608721266145,"results":"56","hashOfConfig":"44"},{"size":9280,"mtime":1608541794967,"results":"57","hashOfConfig":"44"},{"size":364,"mtime":1608016217444,"results":"58","hashOfConfig":"44"},{"size":6955,"mtime":1608716356245,"results":"59","hashOfConfig":"44"},{"size":7626,"mtime":1608719923996,"results":"60","hashOfConfig":"44"},{"size":4822,"mtime":1608541146512,"results":"61","hashOfConfig":"44"},{"size":20417,"mtime":1608715022740,"results":"62","hashOfConfig":"44"},{"size":6271,"mtime":1608543349260,"results":"63","hashOfConfig":"44"},{"size":1351,"mtime":1608108326222,"results":"64","hashOfConfig":"44"},{"size":2126,"mtime":1608633336927,"results":"65","hashOfConfig":"44"},{"size":3256,"mtime":1608712736182,"results":"66","hashOfConfig":"44"},{"size":1085,"mtime":1608635961995,"results":"67","hashOfConfig":"44"},{"size":2369,"mtime":1608708808073,"results":"68","hashOfConfig":"44"},{"size":235,"mtime":1608016217392,"results":"69","hashOfConfig":"44"},{"size":1074,"mtime":1608543349260,"results":"70","hashOfConfig":"44"},{"size":543,"mtime":1608016217400,"results":"71","hashOfConfig":"44"},{"size":481,"mtime":1608016217400,"results":"72","hashOfConfig":"44"},{"size":1238,"mtime":1608016217400,"results":"73","hashOfConfig":"44"},{"size":11832,"mtime":1608016217400,"results":"74","hashOfConfig":"44"},{"size":2838,"mtime":1608720192543,"results":"75","hashOfConfig":"44"},{"size":9097,"mtime":1608713934124,"results":"76","hashOfConfig":"44"},{"size":7347,"mtime":1608713922376,"results":"77","hashOfConfig":"44"},{"size":2052,"mtime":1608713928472,"results":"78","hashOfConfig":"44"},{"size":1856,"mtime":1608626747564,"results":"79","hashOfConfig":"44"},{"size":4444,"mtime":1608636453443,"results":"80","hashOfConfig":"44"},{"size":1088,"mtime":1608633197169,"results":"81","hashOfConfig":"44"},{"size":871,"mtime":1608640423868,"results":"82","hashOfConfig":"44"},{"size":4079,"mtime":1608708723070,"results":"83","hashOfConfig":"44"},{"size":2275,"mtime":1608721130455,"results":"84","hashOfConfig":"44"},{"size":565,"mtime":1608721387239,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1lvolhw",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/user/dev/cv-project/src/index.js",[],["173","174"],"/home/user/dev/cv-project/src/reportWebVitals.js",[],"/home/user/dev/cv-project/src/App.js",[],"/home/user/dev/cv-project/src/store/configureStore.js",[],"/home/user/dev/cv-project/src/components/Template1.jsx",[],"/home/user/dev/cv-project/src/1.js",[],"/home/user/dev/cv-project/src/reducers/rootReducer.js",[],"/home/user/dev/cv-project/src/templatePage.jsx",["175"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport allTemplateActions from \"./actions/templateActions\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport firebase from 'firebase';\nimport { useHistory } from \"react-router-dom\";\nimport allCustomizedTemplateActions from './actions/customizedTemplateActions';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(5),\n    textAlign: \"center\",\n  },\n}));\n\nexport default function CenteredGrid() {\n  let history = useHistory();\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n  const [open, setOpen] = React.useState(false);\n  const [savedTemplates, setSavedTemplates] = React.useState([]);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const { templateNumber } = useSelector((state) => state.templateReducer);\n\n  React.useEffect(() => {\n    let cleanupFunction = false;\n    const fetchData = () => {\n      let itemList = [];\n      firebase.database().ref(`templates/`).on('value', (snapshot) => {\n        const data = snapshot.val();\n        let i = 0;\n        const resp = data;\n        for (let key in resp){\n          itemList[i] = {\n              uid: key,\n              name: resp[key].info.firstName,\n          } \n          i++;\n        }\n        setSavedTemplates(itemList);\n      });\n    }\n\n    if(!cleanupFunction){\n      fetchData();\n    }\n    return () => cleanupFunction = true;\n  }, [])\n\n\n  const loadTemplate = (uid) => {\n    history.push(`/resumeLoad/${uid}`);\n  }\n\n\n\n   \n\n  return (\n    <div className=\"page\">\n      <div className=\"container-pdf\">\n        <h2 className=\"h2-template\">Choose a template</h2>\n        <div className={classes.root}>\n          <Grid container spacing={1}>\n            <Grid item xs={3} className=\"template-1\">\n              <div className=\"cont-temp\">\n              <img className=\"img-1-1\" src=\"./template-1-1.png\" alt=\"\" />\n              <img\n                id=\"1\"\n                onClick={(e) => {\n                  \n                  handleClick(Alert)\n                  dispatch(allTemplateActions.setTemplateAction(e.target.id));\n                }}\n                className=\"img-1-2\"\n                src=\"./template-1-2.png\"\n                alt=\"\"\n              />\n             \n\n              \n             <div className=\"cont-item\">\n              \n              <h3 className=\"h3-template\">Template 1</h3>\n              {templateNumber==='1'?<CheckCircleOutlineIcon className=\"icon\"/>:null}\n              </div>\n              </div>\n            </Grid>\n            <Grid item xs={3} className=\"template-1\">\n              <div className=\"cont-temp\">\n              <img className=\"img-1-1\" src=\"./template-2-1.png\" alt=\"\" />\n              <img\n                id=\"2\"\n                onClick={(e) => {\n                  \n                  handleClick(Alert)\n                  dispatch(allTemplateActions.setTemplateAction(e.target.id));\n                }}\n                className=\"img-1-2\"\n                src=\"./template-2-2.png\"\n                alt=\"\"\n              />\n             \n\n              \n             <div className=\"cont-item\">\n              \n              <h3 className=\"h3-template\">Template 2</h3>\n              {templateNumber==='2'?<CheckCircleOutlineIcon className=\"icon\"/>:null}\n              </div>\n              </div>\n            </Grid>\n            <Grid item xs={3} className=\"template-1\">\n              <div className=\"cont-temp\">\n              <img className=\"img-1-1\" src=\"./template-3-1.png\" alt=\"\" />\n              <img\n                id=\"3\"\n                onClick={(e) => {\n                  \n                  handleClick(Alert)\n                  dispatch(allTemplateActions.setTemplateAction(e.target.id));\n                }}\n                className=\"img-1-2\"\n                src=\"./template-3-2.png\"\n                alt=\"\"\n              />\n             \n\n              \n             <div className=\"cont-item\">\n              \n              <h3 className=\"h3-template\">Template 3</h3>\n              {templateNumber==='3'?<CheckCircleOutlineIcon className=\"icon\"/>:null}\n              </div>\n              </div>\n            </Grid>\n            <Grid item xs={3} className=\"template-1\">\n              <div className=\"cont-temp\">\n              <img className=\"img-1-1\" src=\"./template-4-1.png\" alt=\"\" />\n              <img\n                id=\"4\"\n                onClick={(e) => {\n                  \n                  handleClick(Alert)\n                  dispatch(allTemplateActions.setTemplateAction(e.target.id));\n                }}\n                className=\"img-1-2\"\n                src=\"./template-4-2.png\"\n                alt=\"\"\n              />\n             \n\n              \n             <div className=\"cont-item\">\n              \n              <h3 className=\"h3-template\">Template 4</h3>\n              {templateNumber==='4'?<CheckCircleOutlineIcon className=\"icon\"/>:null}\n              </div>\n              </div>\n            </Grid>\n            <Grid item xs={3} className=\"template-1\">\n              <div className=\"cont-temp\">\n              <img className=\"img-1-1\" src=\"./template-5-1.png\" alt=\"\" />\n              <img\n                id=\"5\"\n                onClick={(e) => {\n                  \n                  handleClick(Alert)\n                  dispatch(allTemplateActions.setTemplateAction(e.target.id));\n                }}\n                className=\"img-1-2\"\n                src=\"./template-5-2.png\"\n                alt=\"\"\n              />\n             \n\n              \n             <div className=\"cont-item\">\n              \n              <h3 className=\"h3-template\">Template 5</h3>\n              {templateNumber==='5'?<CheckCircleOutlineIcon className=\"icon\"/>:null}\n              </div>\n              </div>\n            </Grid>\n            <Grid item xs={3} className=\"template-1\">\n              <div className=\"cont-temp\">\n              <img className=\"img-1-1\" src=\"./template-6-1.png\" alt=\"\" />\n              <img\n                id=\"6\"\n                onClick={(e) => {\n                  \n                  handleClick(Alert)\n                  dispatch(allTemplateActions.setTemplateAction(e.target.id));\n                }}\n                className=\"img-1-2\"\n                src=\"./template-6-1.png\"\n                alt=\"\"\n              />\n             \n\n              \n             <div className=\"cont-item\">\n              \n              <h3 className=\"h3-template\">Create template</h3>\n              {templateNumber==='6'?<CheckCircleOutlineIcon className=\"icon-2\"/>:null}\n              </div>\n              </div>\n            </Grid>\n            \n          </Grid>\n        </div>\n\n        {templateNumber===\"\"?<h3 className=\"h3-template\">\nplease select a template</h3>:<Button\n          onClick={()=>{dispatch(allCustomizedTemplateActions.setCustomTemplateUidAction(null));history.push('/resume')}}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Next\n        </Button>}\n\n\n        <ul style={{color: 'white'}}>\n          {savedTemplates.map((item, index) => (\n            <li onClick={() => loadTemplate(item.uid)} key={index}>{item.name}</li>\n          ))}\n        </ul>\n\n\n\n        \n      </div>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n          This is a success message!\n        </Alert>\n      </Snackbar>\n      \n    </div>\n  );\n}\n","/home/user/dev/cv-project/src/components/Template3.jsx",[],"/home/user/dev/cv-project/src/components/Template4.jsx",[],"/home/user/dev/cv-project/src/components/Template5.jsx",[],"/home/user/dev/cv-project/src/components/Template2.jsx",[],"/home/user/dev/cv-project/src/components/inputs/Drag.jsx",["176","177","178"],"import React, { useState,useEffect } from \"react\";\nimport { PDFExport } from \"@progress/kendo-react-pdf\";\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport allCustomizedTemplateActions from '../../actions/customizedTemplateActions';\nimport { Button, Container, Grid } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { SketchPicker } from \"react-color\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport \"gridstack/dist/h5/gridstack-dd-native\";\nimport \"gridstack/dist/jq/gridstack-dd-jqueryui\";\nimport DragHeader from \"./DragHeader\";\nimport DragBody from \"./DragBody\";\nimport {Link} from 'react-router-dom';\nimport DragPortfolio from './DragPortfolio'\nimport \"../grid.scss\";\nimport TextDecorateButtons from './TextDecorateButtons'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport AboutMe from \"./aboutMe\";\nimport Portfolio from \"./portfolio\";\nimport AboutWorkHistory from \"./aboutWorkHistory\";\nimport AboutHardSkills from \"./aboutHardSkills\";\nimport firebase from 'firebase';\nimport {\n  useParams,\n} from \"react-router-dom\";\nimport { useHistory } from 'react-router'\nimport allAboutMeActions from '../../actions/aboutMeActions';\nimport allAboutWorkActions from '../../actions/aboutWorkActions';\nimport allHardSkillsActions from \"../../actions/aboutHardSkillsActions\";\nimport allPortfolioActions from \"../../actions/portfolioActions\";\n\n// import {gridHeader} from './DragHeader';\nimport {GridStack} from 'gridstack';\nimport Load from \"./Load\";\n\n\n\n\nexport let q;\nconst useStyles3 = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n}));\n\n\nconst Drag = () => {\n\n  const history = useHistory()\n  let { uid } = useParams();\n  let pdfExportComponent;\n  const dispatch = useDispatch();\n  const { \n    headerBackground, \n    bodyBackground, \n    headerImageValue,  \n    bodyImageValue,\n    nameSize,\n    posSize,\n    titleSize,\n    subTitleSize,\n    textSize,\n    smallTextSize,\n    nameColor,\n    posColor,\n    titleColor,\n    subTitleColor,\n    textColor,\n    smallTextColor,\n    customizedTemplateUid,\n  } = useSelector(state => state.customizedTemplateReducer);\n  const usersStyles = useSelector(state => state.customizedTemplateReducer);\n  const userInfo = useSelector((state) => state.aboutMeReducer);\n  const userAboutHardSkills = useSelector((state) => state.aboutHardSkillsReducer);\n  const userWorkHistory = useSelector((state) => state.aboutWorkHistoryReducer);\n  const userInfoPortfolio = useSelector((state) => state.portfolioReducer);\n  const [cls, setCls] = useState([\"side1\"]);\n  const [cls2, setCls2] = useState([\"side2\"]);\n  const [open, setOpen] = useState(false);\n  const [open2, setOpen2] = useState(true);\n  const [font, setFont] = useState('Raleway');\n  const useStyles2 = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  }));\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      border: `1px solid ${theme.palette.divider}`,\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.secondary,\n      '& svg': {\n        margin: theme.spacing(1),\n        // fontSize:15,\n        padding:4,\n      },\n      '& hr': {\n        margin: theme.spacing(0, 0.5),\n      },\n    },\n  }));\n  const classes = useStyles();\n  const classes2 = useStyles2();\n  const classes3 = useStyles3();\n\n\n\n\n  const [load, setLoad] = useState(true);\n\n\n  //SAVE\n  useEffect(() => {\n    \n    let options = { \n      cellHeight: 5,\n      disableOneColumnMode: true,\n      float: false,\n  };\n    if(uid){\n      dispatch(allCustomizedTemplateActions.setCustomTemplateUidAction(uid));\n      let fetchData = new Promise((resolve, reject) => {\n        firebase.database().ref(`templates/${uid}`).on('value', (snapshot) => {\n          const data = snapshot.val();\n          dispatch(allAboutMeActions.setAllAction(data.info));\n          dispatch(allCustomizedTemplateActions.setAllAction(data.stylesMain));\n          dispatch(allCustomizedTemplateActions.setMatrixAction(data.matrixBlock));\n          dispatch(allAboutWorkActions.setAllHistoryAction(data.userWorkHistory));\n          dispatch(allHardSkillsActions.setAllSkillsAction(data.userAboutHardSkills));\n          dispatch(allPortfolioActions.setAllPortfolioAction(data.portfolio));\n          setFont(data.font);\n          let blocksArr = document.querySelectorAll('.grid-stack-item-content');\n          blocksArr.forEach((item, i) => {\n            data.stylesBlock.map(itemArr => {\n              if (itemArr.id === item.getAttribute('data-id')){\n                item.style.alignItems = itemArr.ver; \n                item.style.textAlign = itemArr.hor; \n              }\n            })\n          })\n          resolve(\"ok\");\n        });\n\n        \n      });\n\n      fetchData.then(_ => {\n        GridStack.init(options, '.grid-stack-header');\n        GridStack.init(options, \".grid-stack-body\");\n        q = GridStack.init(options, \".grid-stack-page2\");\n        setLoad(false)\n      })\n\n    } else {\n      GridStack.init(options, '.grid-stack-header');\n      GridStack.init(options, \".grid-stack-body\");\n      q = GridStack.init(options, \".grid-stack-page2\");\n      setLoad(false)\n  \n    }\n\n  }, [uid]);\n\n\n  const handlerSaveTemplate = () => {\n    let stylesBlock = [];\n    let blocksArr = document.querySelectorAll('.grid-stack-item-content');\n    blocksArr.forEach((item, i) => {\n      stylesBlock.push({\n        id: item.getAttribute('data-id'),\n        ver: getComputedStyle(item).alignItems,\n        hor: getComputedStyle(item).textAlign,\n\n      })\n\n    });\n\n    let matrixBlock = [];\n    let blocksArrMatrix = document.querySelectorAll('.grid-stack-item');\n    blocksArrMatrix.forEach((item, i) => {\n      matrixBlock.push({\n        h: item.getAttribute('gs-h'),\n        w: item.getAttribute('gs-w'),\n        x: item.getAttribute('gs-x'),\n        y: item.getAttribute('gs-y'),\n      })\n      \n    })\n\n    if( customizedTemplateUid ){\n      let newTemplate = firebase.database().ref(`templates/${customizedTemplateUid}/`);\n      newTemplate.update({\n        stylesMain: usersStyles,\n        info: userInfo,\n        portfolio: userInfoPortfolio,\n        stylesBlock: stylesBlock,\n        userWorkHistory,\n        userAboutHardSkills,\n        font: font,\n        matrixBlock: matrixBlock,\n      });\n    } else {\n      let newTemplate = firebase.database().ref('templates/');\n      newTemplate.push({\n        stylesMain: usersStyles,\n        info: userInfo,\n        portfolio: userInfoPortfolio,\n        stylesBlock: stylesBlock,\n        userWorkHistory,\n        userAboutHardSkills,\n        font: font, \n        matrixBlock: matrixBlock,\n      }).then((snap) => {\n        dispatch(allCustomizedTemplateActions.setCustomTemplateUidAction(snap.key)) \n      });\n    }\n  }\n\n//SAVE\n\n\n\n  useEffect(() => {\n    if (open2) {\n      setCls2((oldArr) => [...oldArr, \"open2\"]);\n      \n    } else {\n      setCls2(['side2']);\n\n    }\n  }, [open2]);\n\n  useEffect(() => {\n    if (open) {\n      setCls((oldArr) => [...oldArr, \"open1\"]);\n      \n    } else {\n      setCls(['side1']);\n\n    }\n  }, [open]);\n\n  useEffect(() => {\n    open&&setOpen2(false);\n  },[open])\n\n  useEffect(() => {\n    open2&&setOpen(false);\n  },[open2])\n\n\n  const handleChangeHeaderBackgroungComplete = (color) => {\n    dispatch(allCustomizedTemplateActions.setHeaderBackgroundAction(color.hex));\n  };\n\n  const handleChangeBodyBackgroungComplete = (color) => {\n    dispatch(allCustomizedTemplateActions.setBodyBackgroundAction(color.hex));\n  };\n  \n  const addHeaderBackground = (e) => {\n  \n    return (e.target.files[0]&& dispatch(allCustomizedTemplateActions.setHeaderImageAction(URL.createObjectURL(e.target.files[0]), e.target.value)))\n  }\n\n  const addBodyBackground = (e) => {\n   \n    return (e.target.files[0]&& dispatch(allCustomizedTemplateActions.setBodyImageAction(URL.createObjectURL(e.target.files[0]), e.target.value)))\n  }  \n\n  const pdfExport = () => {\n    pdfExportComponent.save();\n  };\n\n  const handleChangeFont = (e) => {\n    setFont(e.target.value)\n  }\n\n  let styleName = {\n    fontSize: nameSize+'px',\n    color: nameColor,\n    fontFamily: font+'-Bold',\n  }\n\n  let stylePosition = {\n    fontSize: posSize+'px',\n    color: posColor,\n    fontFamily: font+'-Bold',\n  }\n\n  let styleTitle = {\n    fontSize: titleSize+'px',\n    color: titleColor,\n    fontFamily: font+'-Bold',\n  }\n\n  let styleSubTitle = {\n    fontSize: subTitleSize+'px',\n    color: subTitleColor,\n    fontFamily: font+'-Bold',\n  }\n\n  let styleText = {\n    fontSize: textSize+'px',\n    color: textColor,\n    fontFamily: font+'-Light',\n  }\n\n  let styleSmallText = {\n    fontSize: smallTextSize+'px',\n    color: smallTextColor,\n    fontFamily: font+'-Light',\n  }\n\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight:300,\n        width: 250,\n      },\n    },\n  };\n \n\n  const fontList = ['Raleway','Caviar','Walkway',\n    'JetBrains','Dancing','Vonique','Monterey',\n    'Titillium', 'Monoglyceride','Flamenco',\n    'Cinzel','Optimus','Neou','NK57','SEGMENT16C','BPMono',\n    'SpaceMono','SicretMono','Yoshitoshi','PiecesOfEight',\n    'Vogue','HalfElven','Gatsby','LifeSavers','Lato','OpenSans',\n    'ChampagneLimousines','Ubuntu','Cabin','Hind','Kanit',\n    'Capoon','Abenda','KenyanCoffee','LJDesignStudiosIs',\n    'Karla','Sharpe','ForgottenFuturist','UbicadaPro',\n    'Aniron','Playfair','Alexandria','Rufina','Lusitana',\n    'AlegreyaSC','Delia','Domine','Vollkorn']\n\n\n  \n  return (\n    <>\n     \n    {load===true? <Load/>:null}\n    <Container>\n      \n      <Grid container>\n        <Grid item xs={12}>\n          <div className=\"button\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className=\"k-button\"\n            onClick={() => {\n              pdfExport();\n            }}\n          >\n            to PDF\n          </Button>\n          <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        className=\"k-button\"\n        to=\"/templates\" component={Link}\n        >\n          Change Template\n        </Button>\n\n        <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        className=\"k-button\"\n        onClick={()=>{handlerSaveTemplate();}}\n        >\n          save{customizedTemplateUid}\n        </Button>\n\n                </div>\n        </Grid>\n        <Grid item xs={12}>\n          <PDFExport\n            forcePageBreak=\".page-break\"\n            ref={(component) => (pdfExportComponent = component)}\n            fileName={\n              `${userInfo.firstName + userInfo.secondName}` +\n              `${userInfo.careerObjective}`\n            }\n          \n          >\n            <DragHeader styleName={styleName} stylePosition={stylePosition} />\n            <DragBody styleSmallText={styleSmallText} styleText={styleText} styleTitle={styleTitle} styleSubTitle={styleSubTitle} />\n            <br />\n            <DragPortfolio styleSmallText={styleSmallText} styleText={styleText} styleTitle={styleTitle} styleSubTitle={styleSubTitle} />\n          </PDFExport>\n        </Grid>\n      </Grid>\n      <div className={cls2.join(\" \")}>\n       <AboutMe/>\n       <br/>\n      <AboutWorkHistory/>\n       <br/>\n       <AboutHardSkills/>\n       <br/>\n       <Portfolio/>\n         {!open2 ? (\n          <div onClick={() => setOpen2(!open2)} className=\"side-open2\">\n            Edit\n          </div>\n        ) : (\n          <div className=\"side-close2\" onClick={() => setOpen2(!open2)}>\n            \n          </div>\n        )}\n      </div>\n      <div className={cls.join(\" \")}>\n       <h2>Editing</h2>\n       <div className=\"edit-cont\">\n      <div>\n      <br/>\n      <br/>\n      <Grid container alignItems=\"center\" className={classes.root}>\n      <h3 style={{width: '100%',textAlign:\"center\",margin:'10px'}}>Select font</h3>\n      <Select\n      className='select-font'\n          value={font}\n          onChange={(e) => handleChangeFont(e)}\n          id=\"filled-select-currency\"\n          variant=\"outlined\"\n          MenuProps={MenuProps}\n        > \n        {fontList.map((item, index)=> {\n          return (\n            <MenuItem key={index} value={item}>\n              {item}\n            </MenuItem>\n          )\n        })}\n        </Select>\n        </Grid>\n        <br/>\n      <TextDecorateButtons/>\n      <br/>\n<Accordion>\n<AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <div className={classes2.heading} ><h3 style={{width: '100%',textAlign:\"center\",margin:'10px'}}>Background</h3>\n</div>\n          </AccordionSummary>\n          <AccordionDetails>\n            <div className=\"flex-cont-edit\">\n            <div className=\"cont-edit\">\n      <Accordion>\n      <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <div className={classes2.heading} ><h3 style={{width: '100%',textAlign:\"center\",margin:'10px'}}>Background header</h3></div>\n        </AccordionSummary>\n        <AccordionDetails>\n        <div>\n          <form>\n            <input accept=\"image/*\" value={headerImageValue}  className={classes3.input} id=\"icon-button-file\" type=\"file\" onChange={(e)=>addHeaderBackground(e)}/>\n            <label htmlFor=\"icon-button-file\">\n        <IconButton  aria-label=\"upload picture\" component=\"span\">\n          \n          <PhotoCamera className='photoInput'/>\n        </IconButton>\n      </label>\n      <ButtonGroup size='small' color=\"primary\" aria-label=\"outlined primary button group\">\n                        <Button onClick={(e) => dispatch(allCustomizedTemplateActions.setHeaderImagePositionAction('cover'))}>Cover</Button>\n                        <Button onClick={(e) => dispatch(allCustomizedTemplateActions.setHeaderImagePositionAction('repeat'))}>Repeat</Button>\n                        </ButtonGroup>\n      </form>\n      <SketchPicker color={headerBackground} onChangeComplete={handleChangeHeaderBackgroungComplete} />      \n\n      </div>\n      </AccordionDetails>\n      </Accordion>\n      </div>\n      <div className=\"cont-edit\">\n\n      <Accordion>\n      <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <div className={classes2.heading} ><h3 style={{width: '100%',textAlign:\"center\",margin:'10px'}}>Background main</h3></div>\n        </AccordionSummary>\n        <AccordionDetails>\n        <div><form>\n            <input accept=\"image/*\" value={bodyImageValue}  className={classes3.input} id=\"icon-button-file2\" type=\"file\" onChange={(e)=>addBodyBackground(e)}/>\n            <label htmlFor=\"icon-button-file2\">\n        <IconButton  aria-label=\"upload picture\" component=\"span\">\n          \n          <PhotoCamera className='photoInput'/>\n        </IconButton>\n      </label>\n      <ButtonGroup size='small' color=\"primary\" aria-label=\"outlined primary button group\">\n                        <Button onClick={(e) => dispatch(allCustomizedTemplateActions.setBodyImagePositionAction('cover'))}>Cover</Button>\n                        <Button onClick={(e) => dispatch(allCustomizedTemplateActions.setBodyImagePositionAction('repeat'))}>Repeat</Button>\n                        </ButtonGroup>\n      </form>\n      <SketchPicker color={bodyBackground} onChangeComplete={handleChangeBodyBackgroungComplete} />\n\n      </div>\n      </AccordionDetails>\n      </Accordion>\n      </div>\n      </div>\n\n      </AccordionDetails>\n      </Accordion>\n      \n     \n      \n      </div>\n            </div> \n        \n        {!open ? (\n          <div onClick={() => setOpen(!open)} className=\"side-open1\">\n            Edit\n          </div>\n        ) : (\n          <div className=\"side-close1\" onClick={() => setOpen(!open)}>\n            \n          </div>\n        )}\n      </div>\n    </Container>\n    </>\n  );\n};\nexport default Drag;\n","/home/user/dev/cv-project/src/components/inputs/aboutHardSkills.js",[],"/home/user/dev/cv-project/src/reducers/templateReducer.js",[],"/home/user/dev/cv-project/src/reducers/portfolioReducer.js",[],"/home/user/dev/cv-project/src/reducers/customizedTemplateReducer.js",[],"/home/user/dev/cv-project/src/components/inputs/aboutWorkHistory.js",[],"/home/user/dev/cv-project/src/components/inputs/portfolio.js",[],"/home/user/dev/cv-project/src/components/inputs/aboutMe.js",[],"/home/user/dev/cv-project/src/reducers/addTechnologyReducer.js",[],"/home/user/dev/cv-project/src/reducers/aboutWorkHistoryReducer.js",[],"/home/user/dev/cv-project/src/reducers/aboutMeReducer.js",[],"/home/user/dev/cv-project/src/reducers/aboutHardSkillsReducer.js",[],"/home/user/dev/cv-project/src/actions/customizedTemplateActions.js",[],"/home/user/dev/cv-project/src/actions/templateActions.js",[],"/home/user/dev/cv-project/src/actions/addTechnologyActions.js",[],"/home/user/dev/cv-project/src/constants/dbsStack.js",[],"/home/user/dev/cv-project/src/constants/backendStack.js",[],"/home/user/dev/cv-project/src/constants/frontendStack.js",[],"/home/user/dev/cv-project/src/constants/stack.js",[],"/home/user/dev/cv-project/src/components/inputs/DragPortfolio.jsx",[],"/home/user/dev/cv-project/src/components/inputs/TextDecorateButtons.jsx",[],"/home/user/dev/cv-project/src/components/inputs/DragBody.jsx",[],"/home/user/dev/cv-project/src/components/inputs/DragHeader.jsx",[],"/home/user/dev/cv-project/src/actions/aboutMeActions.js",[],"/home/user/dev/cv-project/src/actions/portfolioActions.js",[],"/home/user/dev/cv-project/src/actions/aboutWorkActions.js",[],"/home/user/dev/cv-project/src/actions/aboutHardSkillsActions.js",[],"/home/user/dev/cv-project/src/constants/actionTypes.js",[],"/home/user/dev/cv-project/src/components/inputs/DragItem.jsx",["179","180"],"/home/user/dev/cv-project/src/components/inputs/Load.jsx",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":14},{"ruleId":"185","severity":1,"message":"189","line":61,"column":9,"nodeType":"187","messageId":"188","endLine":61,"endColumn":16},{"ruleId":"190","severity":1,"message":"191","line":153,"column":42,"nodeType":"192","messageId":"193","endLine":153,"endColumn":44},{"ruleId":"194","severity":1,"message":"195","line":181,"column":6,"nodeType":"196","endLine":181,"endColumn":11,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":53,"column":13,"nodeType":"200","messageId":"201","endLine":53,"endColumn":31},{"ruleId":"194","severity":1,"message":"202","line":53,"column":20,"nodeType":"203","endLine":53,"endColumn":31},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["206"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","Assignments to the 'type' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},"Update the dependencies array to be: [dispatch, uid]",{"range":"209","text":"210"},[5855,5860],"[dispatch, uid]"]