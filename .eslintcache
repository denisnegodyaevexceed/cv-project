[{"/home/user/cv-project/cv-project/src/index.js":"1","/home/user/cv-project/cv-project/src/reportWebVitals.js":"2","/home/user/cv-project/cv-project/src/store/configureStore.js":"3","/home/user/cv-project/cv-project/src/App.js":"4","/home/user/cv-project/cv-project/src/components/Template1.jsx":"5","/home/user/cv-project/cv-project/src/reducers/rootReducer.js":"6","/home/user/cv-project/cv-project/src/main.js":"7","/home/user/cv-project/cv-project/src/1.js":"8","/home/user/cv-project/cv-project/src/components/inputs/portfolio.js":"9","/home/user/cv-project/cv-project/src/templatePage.jsx":"10","/home/user/cv-project/cv-project/src/reducers/aboutMeReducer.js":"11","/home/user/cv-project/cv-project/src/reducers/aboutHardSkillsReducer.js":"12","/home/user/cv-project/cv-project/src/reducers/aboutWorkHistoryReducer.js":"13","/home/user/cv-project/cv-project/src/reducers/portfolioReducer.js":"14","/home/user/cv-project/cv-project/src/components/inputs/aboutHardSkills.js":"15","/home/user/cv-project/cv-project/src/components/inputs/aboutWorkHistory.js":"16","/home/user/cv-project/cv-project/src/components/inputs/aboutMe.js":"17","/home/user/cv-project/cv-project/src/actions/portfolioActions.js":"18","/home/user/cv-project/cv-project/src/actions/aboutHardSkillsActions.js":"19","/home/user/cv-project/cv-project/src/actions/aboutWorkActions.js":"20","/home/user/cv-project/cv-project/src/actions/aboutMeActions.js":"21","/home/user/cv-project/cv-project/src/constants/actionTypes.js":"22","/home/user/cv-project/cv-project/src/reducers/templateReducer.js":"23","/home/user/cv-project/cv-project/src/actions/templateActions.js":"24"},{"size":632,"mtime":1606916976188,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1606896370287,"results":"27","hashOfConfig":"26"},{"size":174,"mtime":1606985173465,"results":"28","hashOfConfig":"26"},{"size":1487,"mtime":1607338377158,"results":"29","hashOfConfig":"26"},{"size":8429,"mtime":1607416094541,"results":"30","hashOfConfig":"26"},{"size":468,"mtime":1607327301089,"results":"31","hashOfConfig":"26"},{"size":6819,"mtime":1607353491686,"results":"32","hashOfConfig":"26"},{"size":876,"mtime":1607339105865,"results":"33","hashOfConfig":"26"},{"size":16221,"mtime":1607415759955,"results":"34","hashOfConfig":"26"},{"size":2846,"mtime":1607417771756,"results":"35","hashOfConfig":"26"},{"size":1901,"mtime":1607094467412,"results":"36","hashOfConfig":"26"},{"size":783,"mtime":1606991909212,"results":"37","hashOfConfig":"26"},{"size":1282,"mtime":1607073795960,"results":"38","hashOfConfig":"26"},{"size":7634,"mtime":1607415759959,"results":"39","hashOfConfig":"26"},{"size":3663,"mtime":1607094467392,"results":"40","hashOfConfig":"26"},{"size":4924,"mtime":1607337073038,"results":"41","hashOfConfig":"26"},{"size":6319,"mtime":1607352385094,"results":"42","hashOfConfig":"26"},{"size":4154,"mtime":1607415759947,"results":"43","hashOfConfig":"26"},{"size":553,"mtime":1606991909192,"results":"44","hashOfConfig":"26"},{"size":964,"mtime":1606985173453,"results":"45","hashOfConfig":"26"},{"size":1625,"mtime":1607094467388,"results":"46","hashOfConfig":"26"},{"size":2690,"mtime":1607415759955,"results":"47","hashOfConfig":"26"},{"size":364,"mtime":1607327301089,"results":"48","hashOfConfig":"26"},{"size":235,"mtime":1607327301089,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"16k4yit",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/home/user/cv-project/cv-project/src/index.js",[],["101","102"],"/home/user/cv-project/cv-project/src/reportWebVitals.js",[],"/home/user/cv-project/cv-project/src/store/configureStore.js",[],"/home/user/cv-project/cv-project/src/App.js",[],"/home/user/cv-project/cv-project/src/components/Template1.jsx",[],"/home/user/cv-project/cv-project/src/reducers/rootReducer.js",[],"/home/user/cv-project/cv-project/src/main.js",["103"],"import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepConnector from \"@material-ui/core/StepConnector\";\nimport Button from \"@material-ui/core/Button\";\nimport AboutMe from \"./components/inputs/aboutMe\";\nimport AboutWorkHistory from \"./components/inputs/aboutWorkHistory\";\nimport AboutHardSkills from \"./components/inputs/aboutHardSkills\";\nimport {Redirect} from \"react-router-dom\";\nimport Portfolio from \"./components/inputs/portfolio\";\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport { useSelector } from \"react-redux\";\n\n// import { useSelector } from 'react-redux';\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    \"& $line\": {\n      backgroundImage:\n        \"linear-gradient(to top right, rgb(23, 11, 11), rgb(40, 16, 12), rgb(58, 20, 13), rgb(75, 25, 14), rgb(93, 29, 15), rgb(110, 34, 16), rgb(110, 39, 18), rgb(111, 44, 19), rgb(111, 49, 21), rgb(111, 54, 22), rgb(112, 59, 24), rgb(112, 64, 25));\",\n    },\n  },\n  completed: {\n    \"& $line\": {\n      backgroundImage:\n        \"linear-gradient(to top right, rgb(23, 11, 11), rgb(40, 16, 12), rgb(58, 20, 13), rgb(75, 25, 14), rgb(93, 29, 15), rgb(110, 34, 16), rgb(110, 39, 18), rgb(111, 44, 19), rgb(111, 49, 21), rgb(111, 54, 22), rgb(112, 59, 24), rgb(112, 64, 25));\",\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: \"#eaeaf0\",\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: \"white\",\n    zIndex: 1,\n    color: \"black\",\n    width: 50,\n    height: 50,\n    display: \"flex\",\n    borderRadius: \"50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    \n  },\n  active: {\n    backgroundColor: \"#f74d33\",\n   \n    boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\",\n  },\n  completed: {\n\n    backgroundColor: \"#f74d33\",\n  },\n});\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const { active, completed } = props;\n\n  const icons = {\n    1: <PermIdentityIcon />,\n    2: <WorkIcon />,\n    3: <FlashOnIcon />,\n    4: <DescriptionIcon />,\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed,\n      })}\n    >\n      {icons[String(props.icon)]}\n    </div>\n  );\n}\n\nColorlibStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  button: {\n    backgroundColor: \"rgb(247, 77, 51)\",\n    marginRight: theme.spacing(1),\n    \"&:hover\": {\n      backgroundColor: \"white\",\n      borderColor: \"rgb(247, 77, 51)\",\n      boxShadow: \"none\",\n    },\n  },\n\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return [\n    \"Personal information\",\n    \"Experience\",\n    \"Skills\",\n    \"Portfolio\",\n  ];\n}\n\nfunction getStepContent(step,open) {\n  switch (step) {\n    \n    case 0:\n      return <AboutMe />;\n    case 1:\n      return <AboutWorkHistory />;\n    case 2:\n      return <AboutHardSkills />;\n    case 3:\n      return <Portfolio />;\n\n    default:\n      return \"Unknown step\";\n  }\n}\n\nexport default function CustomizedSteppers() {\n  \n  const { templateNumber } = useSelector((state) => state.templateReducer);\n  let {firstName, secondName, careerObjective, aboutMeInfo, email, phoneNumber, } = useSelector(state => state.aboutMeReducer)\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n  const [cls, setCls] = useState([\"side\"]);\n  const [open, setOpen] = useState(true);\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    \n  };\n  \n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    \n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n  \n\n  useEffect(() => {\n    if (open) {\n      setCls((oldArr) => [...oldArr, \"open\"]);\n      \n    } else {\n      setCls(['side']);\n\n    }\n  }, [open]);\nconst link = `./template-${templateNumber}-1.png`\n  return (\n    \n    <div className=\"page\">\n      \n      <div  className={cls.join(\" \")}>\n      {templateNumber === ''?<h2 className=\"side-h2\">\nplease select a template</h2>:<h2 className=\"side-h2\">Selected template</h2>}\n        \n        {templateNumber === ''?null:<img className=\"side-img\" src={link} alt=\"\" />}\n        {!open?(<div onClick={() => setOpen(!open)} className=\"side-open\">\n          Open\n          </div>):(<div className='side-close' onClick={() => setOpen(!open)}>\n            Close\n            </div>)}\n        \n\n      </div>\n      <Stepper\n        className=\"t-1\"\n        alternativeLabel\n        activeStep={activeStep}\n        connector={<ColorlibConnector />}\n      >\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Redirect to=\"/resume\" className={classes.instructions} />\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div className=\"container-pdf\">\n            <div className={classes.instructions}>\n              {getStepContent(activeStep)}\n            </div>\n            <div>\n              <Button\n                variant=\"contained\"\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                className={classes.button}\n              >\n                Back\n              </Button>\n              {!(firstName&&secondName&&careerObjective&&aboutMeInfo&&email)?<h2 className=\"h3-template\">\n\n              fill in the fields with *</h2>:<Button\n                variant=\"contained\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n              </Button>}\n              \n              \n            </div>\n          </div>\n        )}\n      </div>\n      \n    </div>\n  );\n}\n","/home/user/cv-project/cv-project/src/1.js",[],"/home/user/cv-project/cv-project/src/components/inputs/portfolio.js",[],"/home/user/cv-project/cv-project/src/templatePage.jsx",[],"/home/user/cv-project/cv-project/src/reducers/aboutMeReducer.js",[],"/home/user/cv-project/cv-project/src/reducers/aboutHardSkillsReducer.js",[],"/home/user/cv-project/cv-project/src/reducers/aboutWorkHistoryReducer.js",[],"/home/user/cv-project/cv-project/src/reducers/portfolioReducer.js",[],"/home/user/cv-project/cv-project/src/components/inputs/aboutHardSkills.js",[],"/home/user/cv-project/cv-project/src/components/inputs/aboutWorkHistory.js",["104"],"import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport allAboutWorkActions from \"../../actions/aboutWorkActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n}));\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nconst AboutWorkHistory = () => {\n  const dispatch = useDispatch();\n\n  let {\n    firstCompany,\n    firstPosition,\n    firstDescription,\n    secondCompany,\n    secondPosition,\n    secondDescription,\n  } = useSelector((state) => state.aboutWorkHistoryReducer);\n\n  const classes = useStyles();\n  const classes2 = useStyles2();\n\n  return (\n    <div className=\"container-pdf\">\n      <div className={classes2.root}>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography className={classes2.heading}>\n              <h2>Indicate the last two places of work.</h2>\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Typography>\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField\n                  value={firstCompany}\n                  onChange={(e) =>\n                    dispatch(\n                      allAboutWorkActions.setFirstCompanyName(e.target.value)\n                    )\n                  }\n                  label=\"Company\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  value={firstPosition}\n                  onChange={(e) =>\n                    dispatch(\n                      allAboutWorkActions.setFirstCompanyPosition(\n                        e.target.value\n                      )\n                    )\n                  }\n                  label=\"Position\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  id=\"outlined-multiline-flexible\"\n                  label=\"Tell us more\"\n                  multiline\n                  rowsMax={10}\n                  value={firstDescription}\n                  onChange={(e) =>\n                    dispatch(\n                      allAboutWorkActions.setFirstCompanyDescription(\n                        e.target.value\n                      )\n                    )\n                  }\n                  variant=\"outlined\"\n                />\n              </form>\n              <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField\n                  value={secondCompany}\n                  onChange={(e) =>\n                    dispatch(\n                      allAboutWorkActions.setSecondCompanyName(e.target.value)\n                    )\n                  }\n                  label=\"Company\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  value={secondPosition}\n                  onChange={(e) =>\n                    dispatch(\n                      allAboutWorkActions.setSecondCompanyPosition(\n                        e.target.value\n                      )\n                    )\n                  }\n                  label=\"Position\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  id=\"outlined-multiline-flexible\"\n                  label=\"Tell us more\"\n                  multiline\n                  rowsMax={10}\n                  value={secondDescription}\n                  onChange={(e) =>\n                    dispatch(\n                      allAboutWorkActions.setSecondCompanyDescription(\n                        e.target.value\n                      )\n                    )\n                  }\n                  variant=\"outlined\"\n                />\n              </form>\n            </Typography>\n          </AccordionDetails>\n        </Accordion>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutWorkHistory;\n\n// import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Accordion from '@material-ui/core/Accordion';\n// import AccordionSummary from '@material-ui/core/AccordionSummary';\n// import AccordionDetails from '@material-ui/core/AccordionDetails';\n// import Typography from '@material-ui/core/Typography';\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//   },\n//   heading: {\n//     fontSize: theme.typography.pxToRem(15),\n//     fontWeight: theme.typography.fontWeightRegular,\n//   },\n// }));\n\n// export default function SimpleAccordion() {\n//   const classes = useStyles();\n\n//   return (\n//     <div className={classes.root}>\n//       <Accordion>\n//         <AccordionSummary\n//           expandIcon={<ExpandMoreIcon />}\n//           aria-controls=\"panel1a-content\"\n//           id=\"panel1a-header\"\n//         >\n//           <Typography className={classes.heading}>Accordion 1</Typography>\n//         </AccordionSummary>\n//         <AccordionDetails>\n//           <Typography>\n//             Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n//             sit amet blandit leo lobortis eget.\n//           </Typography>\n//         </AccordionDetails>\n//       </Accordion>\n//       <Accordion>\n//         <AccordionSummary\n//           expandIcon={<ExpandMoreIcon />}\n//           aria-controls=\"panel2a-content\"\n//           id=\"panel2a-header\"\n//         >\n//           <Typography className={classes.heading}>Accordion 2</Typography>\n//         </AccordionSummary>\n//         <AccordionDetails>\n//           <Typography>\n//             Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n//             sit amet blandit leo lobortis eget.\n//           </Typography>\n//         </AccordionDetails>\n//       </Accordion>\n//     </div>\n//   );\n// }\n","/home/user/cv-project/cv-project/src/components/inputs/aboutMe.js",[],"/home/user/cv-project/cv-project/src/actions/portfolioActions.js",[],"/home/user/cv-project/cv-project/src/actions/aboutHardSkillsActions.js",[],"/home/user/cv-project/cv-project/src/actions/aboutWorkActions.js",[],"/home/user/cv-project/cv-project/src/actions/aboutMeActions.js",[],"/home/user/cv-project/cv-project/src/constants/actionTypes.js",[],"/home/user/cv-project/cv-project/src/reducers/templateReducer.js",[],"/home/user/cv-project/cv-project/src/actions/templateActions.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":158,"column":68,"nodeType":"111","messageId":"112","endLine":158,"endColumn":79},{"ruleId":"109","severity":1,"message":"113","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":17},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'phoneNumber' is assigned a value but never used.","Identifier","unusedVar","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]